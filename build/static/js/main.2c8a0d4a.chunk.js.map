{"version":3,"sources":["store/constants.js","store/reducers.js","store/store.js","store/actions.js","components/Sidebar/Card.js","utils/api.js","components/Sidebar/Sidebar.js","components/ButtonFindAll.js","components/ButtonSwapBasemap.js","components/CheckboxSearchOnMove.js","components/Popup.js","components/Map.js","index.js"],"names":["UPDATE_SEARCH_QUERY","UPDATE_MARKERS","DELETE_MARKERS","TOGGLE_IS_LOADING","UPDATE_VIEW_EXTENT","SET_VIEW","UPDATE_DISPLAYED_FEATURES","SET_RESULTS_WITHIN_COORDS","SET_FEATURE_LAYER","SET_CURRENT_BASEMAP","SET_CURRENT_MAP_POSITION","SET_SELECTED_RECORD","SET_HOVERED_FEATURE","TOGGLE_POPUP","SET_POPUP_COORDS","SET_IS_SOURCE_LOADED","SET_IS_MAP_LOADED","SET_IS_LABELS_TOGGLED","SET_IS_DARK_MODE_TOGGLED","SET_IS_CLUSTER_TOGGLED","SET_IS_SEARCH_ON_MAP_MOVE_TOGGLED","SET_MAP_STYLE","TOGGLE_RESULTS_DRAWER","TOGGLE_SETTINGS_DRAWER","SET_HOVERED_FEATURE_DATA","ADD_HOVERED_FEATURE_HASH","MOVE_MAP_TO_POSITION","TOGGLE_IS_POPUP_LOADING","SET_CURRENT_POPUP_TITLE","RESIZE_MAP","SET_URL","FORCE_GET_DISPLAYED_FEATURES","JUMP_TO_MAP_POSITION","UPDATE_LOCATION_SEARCH_QUERY","SEARCH_MODE","SET_VALIDATED_LOCATION","SHOW_FILTERS","SET_FILTER_COUNT","UPDATE_KEYWORD_SEARCH_QUERY","ZOOM_FIT_MARKERS","initialState","windowWidth","window","innerWidth","windowHeight","innerHeight","isLoading","error","searchQuery","viewExtent","view","displayedFeatures","resultsWithinCoords","featureLayer","currentBasemap","selectedRecord","currentMapPosition","center","lng","lat","zoom","bounds","hoveredFeature","isPopupOpen","popupCoords","isSourceLoaded","isMapLoaded","markers","type","cluster","clusterRadius","clusterMaxZoom","data","features","isLabelsToggled","isDarkModeToggled","isClusterToggled","isSearchOnMapMoveToggled","mapStyle","isResultsDrawerToggled","isSettingsDrawerToggled","hoveredFeatureData","hoveredFeatureHashMap","moveMapToPosition","isPopupLoading","currentPopupTitle","resizeMap","url","forceGetDisplayedFeatures","jumpToMapPosition","locationSearchQuery","searchMode","validatedLocation","showFilters","filterCount","keywordSearchQuery","zoomFitMarkers","rootReducer","state","action","payload","flag","_id","urlParams","toFixed","Object","entries","key","val","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","updateMarkers","setIsSearchOnMapMoveToggled","setMapStyle","toggleResultsDrawer","toggle","Card","vessel_name","year_sunk","location_latitude","location_longitude","id","history_summary","hoverId","jumpTo","popUp","useSelector","dispatch","useDispatch","handleMouseOver","className","onClick","onMouseOver","slice","searchWithinBoundingBox","_ne","_sw","axios","get","then","res","status","arr","hits","map","elem","_source","createMarkers","catch","err","fetchWrecksFromDb","Promise","resolve","reject","query","limit","Math","floor","random","Sidebar","isOpen","console","log","cards","handleSearch","a","db","index","properties","alt","length","autoFocus","placeholder","value","onKeyDown","event","onChange","e","target","ButtonFindAll","handleClick","ButtonSwapBasemap","toggleMapStyle","CheckboxSearchOnMove","aria-checked","checked","this","props","viewBox","focusable","fill","d","htmlFor","React","Component","connect","Popup","useState","popupData","setPopupData","loading","setLoading","popupContent","useEffect","getRecordById","results","history","location","lon","sources","sources_external_links","href","mapboxgl","workerClass","require","default","Map","mapContainer","useRef","hoveredIdRef","popupRef","zoomFit","handleMarkerClick","queryRenderedFeatures","point","layers","current","document","createElement","style","minWidth","minHeight","ReactDOM","render","offset","setLngLat","setDOMContent","on","_update","addTo","accessToken","attributionControl","logoPosition","container","resize","addSource","addLayer","source","filter","paint","layout","setLayoutProperty","getCanvas","cursor","setFeatureState","hover","clusterId","cluster_id","getSource","getClusterExpansionZoom","geometry","coordinates","getCenter","getZoom","remove","getLayer","forEach","feature","cb","getBounds","wrap","off","setData","newLngLatBounds","LngLatBounds","extend","newBounds","reduce","coord","fitBounds","padding","move","setPadding","left","top","bottom","ref","el","getElementById"],"mappings":"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","file":"static/js/main.2c8a0d4a.chunk.js","sourcesContent":["export const UPDATE_SEARCH_QUERY = \"UPDATE_SEARCH_QUERY\"\nexport const UPDATE_MARKERS = \"UPDATE_MARKERS\"\nexport const DELETE_MARKERS = \"DELETE_MARKERS\"\nexport const TOGGLE_IS_LOADING = \"TOGGLE_IS_LOADING\"\nexport const UPDATE_VIEW_EXTENT = \"UPDATE_VIEW_EXTENT\"\nexport const SET_VIEW = \"SET_VIEW\"\nexport const UPDATE_DISPLAYED_FEATURES = \"UPDATE_DISPLAYED_FEATURES\"\nexport const SET_RESULTS_WITHIN_COORDS = \"SET_RESULTS_WITHIN_COORDS\"\nexport const SET_FEATURE_LAYER = \"SET_FEATURE_LAYER\"\nexport const SET_CURRENT_BASEMAP = \"SET_CURRENT_BASEMAP\"\nexport const SET_CURRENT_MAP_POSITION = \"SET_CURRENT_MAP_POSITION\"\nexport const SET_SELECTED_RECORD = \"SET_SELECTED_RECORD\"\nexport const SET_HOVERED_FEATURE = \"SET_HOVERED_FEATURE\"\nexport const TOGGLE_POPUP = \"TOGGLE_POPUP\"\nexport const SET_POPUP_COORDS = \"SET_POPUP_COORDS\"\nexport const SET_IS_SOURCE_LOADED = \"SET_IS_SOURCE_LOADED\"\nexport const SET_IS_MAP_LOADED = \"SET_IS_MAP_LOADED\"\nexport const SET_IS_LABELS_TOGGLED = \"SET_IS_LABELS_TOGGLED\"\nexport const SET_IS_DARK_MODE_TOGGLED = \"SET_IS_DARK_MODE_TOGGLED\"\nexport const SET_IS_CLUSTER_TOGGLED = \"SET_IS_CLUSTER_TOGGLED\"\nexport const SET_IS_SEARCH_ON_MAP_MOVE_TOGGLED = \"SET_IS_SEARCH_ON_MAP_MOVE_TOGGLED\"\nexport const SET_MAP_STYLE = \"SET_MAP_STYLE\"\nexport const TOGGLE_RESULTS_DRAWER = \"TOGGLE_RESULTS_DRAWER\"\nexport const TOGGLE_SETTINGS_DRAWER = \"TOGGLE_SETTINGS_DRAWER\"\nexport const SET_HOVERED_FEATURE_DATA = \"SET_HOVERED_FEATURE_DATA\"\nexport const ADD_HOVERED_FEATURE_HASH = \"ADD_HOVERED_FEATURE_HASH\"\nexport const MOVE_MAP_TO_POSITION = \"MOVE_MAP_TO_POSITION\"\nexport const TOGGLE_IS_POPUP_LOADING = \"TOGGLE_IS_POPUP_LOADING\"\nexport const SET_CURRENT_POPUP_TITLE = \"SET_CURRENT_POPUP_TITLE\"\nexport const RESIZE_MAP = \"RESIZE_MAP\"\nexport const SET_URL = \"SET_URL\"\nexport const FORCE_GET_DISPLAYED_FEATURES = \"FORCE_GET_DISPLAYED_FEATURES\"\nexport const JUMP_TO_MAP_POSITION = \"JUMP_TO_MAP_POSITION\"\nexport const UPDATE_LOCATION_SEARCH_QUERY = \"UPDATE_LOCATION_SEARCH_QUERY\"\nexport const SEARCH_MODE = \"SEARCH_MODE\"\nexport const SET_VALIDATED_LOCATION = \"SET_VALIDATED_LOCATION\"\nexport const SHOW_FILTERS = \"SHOW_FILTERS\"\nexport const SET_FILTER_COUNT = \"SET_FILTER_COUNT\"\nexport const UPDATE_KEYWORD_SEARCH_QUERY = \"UPDATE_KEYWORD_SEARCH_QUERY\"\nexport const ZOOM_FIT_MARKERS = \"ZOOM_FIT_MARKERS\"\n\n","import {\n  UPDATE_SEARCH_QUERY,\n  UPDATE_MARKERS,\n  DELETE_MARKERS,\n  TOGGLE_IS_LOADING,\n  UPDATE_VIEW_EXTENT,\n  SET_VIEW,\n  UPDATE_DISPLAYED_FEATURES,\n  SET_RESULTS_WITHIN_COORDS,\n  SET_FEATURE_LAYER,\n  SET_CURRENT_BASEMAP,\n  SET_CURRENT_MAP_POSITION,\n  SET_SELECTED_RECORD,\n  SET_HOVERED_FEATURE,\n  TOGGLE_POPUP,\n  SET_POPUP_COORDS,\n  SET_IS_SOURCE_LOADED,\n  SET_IS_MAP_LOADED,\n  SET_IS_LABELS_TOGGLED,\n  SET_IS_DARK_MODE_TOGGLED,\n  SET_IS_CLUSTER_TOGGLED,\n  SET_IS_SEARCH_ON_MAP_MOVE_TOGGLED,\n  SET_MAP_STYLE,\n  TOGGLE_RESULTS_DRAWER,\n  TOGGLE_SETTINGS_DRAWER,\n  SET_HOVERED_FEATURE_DATA,\n  ADD_HOVERED_FEATURE_HASH,\n  MOVE_MAP_TO_POSITION,\n  TOGGLE_IS_POPUP_LOADING,\n  SET_CURRENT_POPUP_TITLE,\n  RESIZE_MAP,\n  SET_URL,\n  FORCE_GET_DISPLAYED_FEATURES,\n  JUMP_TO_MAP_POSITION,\n  UPDATE_LOCATION_SEARCH_QUERY,\n  SEARCH_MODE,\n  SET_VALIDATED_LOCATION,\n  SHOW_FILTERS,\n  SET_FILTER_COUNT,\n  UPDATE_KEYWORD_SEARCH_QUERY,\n  ZOOM_FIT_MARKERS\n} from './constants'\n\nconst initialState = {\n  windowWidth:  window.innerWidth,\n  windowHeight:  window.innerHeight,\n  isLoading: false,\n  error: null,\n  searchQuery: '',\n  viewExtent: null,\n  view: null,\n  displayedFeatures: null,\n  resultsWithinCoords: null,\n  featureLayer: null,\n  currentBasemap: 'oceans',\n  selectedRecord: null,\n  currentMapPosition: {\n    center: {\n      lng: -75.41030655591322,\n      lat: 39.91818160566052\n    },\n    zoom: [6],\n    bounds: null\n  },\n  hoveredFeature: null,\n  isPopupOpen: false,\n  popupCoords: [0,0],\n  isSourceLoaded: false,\n  isMapLoaded: false,\n  markers: {\n    type: 'geojson',\n    // generateId: true,\n    cluster: true,\n    clusterRadius: 45,\n    clusterMaxZoom: 11,\n    data: {\n      type: 'FeatureCollection',\n      features: []\n    }\n  },\n  isLabelsToggled: true,\n  isDarkModeToggled: false,\n  isClusterToggled: true,\n  isSearchOnMapMoveToggled: true,\n  // mapStyle: 'mapbox://styles/gwilken/cjxwljb4b1kt51cl63y6wzr0w',\n  mapStyle: 'depth',\n  isResultsDrawerToggled: window.innerWidth <= 500 ? false : true,\n  isSettingsDrawerToggled: false,\n  hoveredFeatureData: null,\n  hoveredFeatureHashMap: {},\n  moveMapToPosition: null,\n  isPopupLoading: false,\n  currentPopupTitle: null,\n  resizeMap: false,\n  url: '',\n  forceGetDisplayedFeatures: false,\n  jumpToMapPosition: null,\n  locationSearchQuery: '',\n  searchMode: 'keyword',\n  validatedLocation: '',\n  showFilters: false,\n  filterCount: 0,\n  keywordSearchQuery: '',\n  zoomFitMarkers: false\n}\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_SEARCH_QUERY:\n      return { ...state, searchQuery: action.payload }\n\n    case UPDATE_MARKERS:\n      return {\n        ...state, \n        markers: {\n          ...state.markers,\n          data: {\n            ...state.markers.data,\n            features: action.markers\n          }\n        }  \n      }\n\n    case DELETE_MARKERS:\n      return {...state, markers: [] }\n\n    case TOGGLE_IS_LOADING:\n      return {...state, isLoading: action.flag}\n\n    case UPDATE_VIEW_EXTENT:\n      return {...state, viewExtent: action.viewExtent}\n\n    case SET_VIEW:\n      return {...state, view: action.view}\n\n    case UPDATE_DISPLAYED_FEATURES:\n      return {...state, displayedFeatures: action.displayedFeatures}\n\n    case SET_RESULTS_WITHIN_COORDS:\n      return {...state, resultsWithinCoords: action.resultsWithinCoords}\n\n    case SET_FEATURE_LAYER:\n      return {...state, featureLayer: action.featureLayer}\n\n    case SET_CURRENT_BASEMAP:\n      return {...state, currentBasemap: action.currentBasemap}\n\n    case SET_CURRENT_MAP_POSITION:\n      return {...state, currentMapPosition: action.currentMapPosition}\n\n    case SET_SELECTED_RECORD:\n      return {...state, selectedRecord: action.selectedRecord}\n\n    case SET_HOVERED_FEATURE:\n      return {...state, hoveredFeature: action.hoveredFeature}\n\n    case TOGGLE_POPUP:\n      return {...state, isPopupOpen: action.isPopupOpen}\n\n    case SET_POPUP_COORDS:\n      return {...state, popupCoords: action.popupCoords}\n\n    case SET_IS_SOURCE_LOADED:\n      return {...state, isSourceLoaded: action.isSourceLoaded}\n      \n    case SET_IS_MAP_LOADED:\n      return {...state, isMapLoaded: action.isMapLoaded}\n\n    case SET_IS_LABELS_TOGGLED:\n      return {...state, isLabelsToggled: action.isLabelsToggled}\n\n    case SET_IS_DARK_MODE_TOGGLED:\n      return {...state, isDarkModeToggled: action.isDarkModeToggled}\n\n    case SET_IS_CLUSTER_TOGGLED:\n      return {...state, isClusterToggled: action.isClusterToggled, markers: {...state.markers, cluster: action.isClusterToggled } }\n\n    case SET_IS_SEARCH_ON_MAP_MOVE_TOGGLED:\n      return {...state, isSearchOnMapMoveToggled: action.isSearchOnMapMoveToggled }\n\n    case SET_MAP_STYLE:\n      return {...state, mapStyle: action.mapStyle}\n\n    case TOGGLE_RESULTS_DRAWER:\n      return {...state, isResultsDrawerToggled: action.isResultsDrawerToggled}\n\n    case TOGGLE_SETTINGS_DRAWER:\n      return {...state, isSettingsDrawerToggled: action.isSettingsDrawerToggled}\n\n    case SET_HOVERED_FEATURE_DATA:\n      return {...state, hoveredFeatureData: action.hoveredFeatureData}\n\n    case ADD_HOVERED_FEATURE_HASH:\n      return {\n          ...state, \n          hoveredFeatureHashMap: {\n            ...state.hoveredFeatureHashMap,\n            [action.hoveredFeatureHashMap._id]: action.hoveredFeatureHashMap\n          }\n        }\n\n    case MOVE_MAP_TO_POSITION:\n      return {...state, moveMapToPosition: action.moveMapToPosition}\n\n    case TOGGLE_IS_POPUP_LOADING:\n      return {...state, isPopupLoading: action.isPopupLoading}\n\n    case SET_CURRENT_POPUP_TITLE:\n      return {...state, currentPopupTitle: action.currentPopupTitle}\n\n    case RESIZE_MAP:\n      return {...state, resizeMap: action.resizeMap}\n\n    case SET_URL:\n      let urlParams = {}\n\n      if (state.currentMapPosition && state.currentMapPosition.center) {\n        let [ zoom ] = state.currentMapPosition.zoom\n        urlParams['center'] = `${state.currentMapPosition.center.lng.toFixed(7)}:${state.currentMapPosition.center.lat.toFixed(7)}`\n        urlParams['zoom'] = zoom.toFixed(3)\n      }\n      \n      if (state.hoveredFeature && state.isPopupOpen && state.popupCoords) {\n        urlParams['popup'] = `${state.hoveredFeature}:${state.popupCoords[0]}:${state.popupCoords[1]}`\n      }\n\n      if (!state.isResultsDrawerToggled) {\n        urlParams['sidebar'] = '0'\n      }\n      \n      let url = '?'\n\n      for (let [key, val] of Object.entries(urlParams)) {\n        url += `&${key}=${val}`\n      }\n      return {...state, url}\n\n    case FORCE_GET_DISPLAYED_FEATURES:\n      return {...state, forceGetDisplayedFeatures: action.forceGetDisplayedFeatures}\n\n    case JUMP_TO_MAP_POSITION:\n      return {...state, jumpToMapPosition: action.jumpToMapPosition}\n    \n    case UPDATE_LOCATION_SEARCH_QUERY:\n      return {...state, locationSearchQuery: action.locationSearchQuery}\n\n    case SEARCH_MODE:\n      return {...state, searchMode: action.searchMode}\n\n    case SET_VALIDATED_LOCATION:\n      return {...state, validatedLocation: action.validatedLocation}\n\n    case SHOW_FILTERS:\n      return {...state, showFilters: action.showFilters}\n\n    case SET_FILTER_COUNT:\n      return {...state, filterCount: action.filterCount}\n\n    case UPDATE_KEYWORD_SEARCH_QUERY:\n      return {...state, keywordSearchQuery: action.keywordSearchQuery}\n\n    case ZOOM_FIT_MARKERS:\n      return {...state, zoomFitMarkers: action.zoomFitMarkers}\n\n    default:\n      return state;\n    }\n  }\n  \nexport default rootReducer\n  ","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store;","import { \n  UPDATE_SEARCH_QUERY,\n  UPDATE_MARKERS,\n  DELETE_MARKERS,\n  TOGGLE_IS_LOADING,\n  UPDATE_VIEW_EXTENT,\n  SET_VIEW,\n  UPDATE_DISPLAYED_FEATURES,\n  SET_RESULTS_WITHIN_COORDS,\n  SET_FEATURE_LAYER,\n  SET_CURRENT_BASEMAP,\n  SET_CURRENT_MAP_POSITION,\n  SET_SELECTED_RECORD,\n  SET_HOVERED_FEATURE,\n  TOGGLE_POPUP,\n  SET_POPUP_COORDS,\n  SET_IS_SOURCE_LOADED,\n  SET_IS_MAP_LOADED,\n  SET_IS_LABELS_TOGGLED,\n  SET_IS_DARK_MODE_TOGGLED,\n  SET_IS_CLUSTER_TOGGLED,\n  SET_IS_SEARCH_ON_MAP_MOVE_TOGGLED,\n  SET_MAP_STYLE,\n  TOGGLE_RESULTS_DRAWER,\n  TOGGLE_SETTINGS_DRAWER,\n  SET_HOVERED_FEATURE_DATA,\n  ADD_HOVERED_FEATURE_HASH,\n  MOVE_MAP_TO_POSITION,\n  TOGGLE_IS_POPUP_LOADING,\n  SET_CURRENT_POPUP_TITLE,\n  RESIZE_MAP,\n  SET_URL,\n  FORCE_GET_DISPLAYED_FEATURES,\n  JUMP_TO_MAP_POSITION,\n  UPDATE_LOCATION_SEARCH_QUERY,\n  SEARCH_MODE,\n  SET_VALIDATED_LOCATION,\n  SHOW_FILTERS,\n  SET_FILTER_COUNT,\n  UPDATE_KEYWORD_SEARCH_QUERY,\n  ZOOM_FIT_MARKERS\n} from './constants'\n\n  \nexport const updateSearchQuery = (query) => (\n  {\n    type: UPDATE_SEARCH_QUERY,\n    payload: query\n  }\n)\n\nexport const updateMarkers = (markers) => (\n  {\n    type: UPDATE_MARKERS,\n    markers\n  }\n)\n\nexport const deleteMarkers = () => (\n  {\n    type: DELETE_MARKERS\n  }\n)\n\nexport const isLoading = (flag) => (\n  {\n    type: TOGGLE_IS_LOADING,\n    flag\n  }\n)\n\nexport const updateViewExtent = (viewExtent) => (\n  {\n    type: UPDATE_VIEW_EXTENT,\n    viewExtent\n  }\n)\n\nexport const setView = (view) => (\n  {\n    type: SET_VIEW,\n    view\n  }\n)\n\nexport const updateDisplayedFeatures = (displayedFeatures) => (\n  {\n    type: UPDATE_DISPLAYED_FEATURES,\n    displayedFeatures\n  }\n  )\n  \n  export const setResultsWithinCoords = (resultsWithInCoords) => (\n    {\n      type: SET_RESULTS_WITHIN_COORDS,\n      resultsWithInCoords\n    }\n  )\n    \n  export const setFeatureLayer = (featureLayer) => (\n    {\n      type: SET_FEATURE_LAYER,\n      featureLayer\n    }\n  )\n  \n  export const setCurrentBasemap = (currentBasemap) => (\n    {\n      type: SET_CURRENT_BASEMAP,\n      currentBasemap\n    }\n  )\n\n  export const setCurrentMapPosition = (currentMapPosition) => (\n    {\n      type: SET_CURRENT_MAP_POSITION,\n      currentMapPosition\n    }\n  )\n\n  export const setSelectedRecord = (selectedRecord) => (\n    {\n      type: SET_SELECTED_RECORD,\n      selectedRecord\n    }\n  )\n\nexport const setHoveredFeature = (hoveredFeature) => (\n  {\n    type: SET_HOVERED_FEATURE,\n    hoveredFeature\n  }\n)\n\nexport const togglePopup = (isPopupOpen) => (\n  {\n    type: TOGGLE_POPUP,\n    isPopupOpen\n  }\n)\n\nexport const setPopupCoords = (popupCoords) => (\n  {\n    type: SET_POPUP_COORDS,\n    popupCoords\n  }\n)\n\nexport const setIsSourceLoaded = (isSourceLoaded) => (\n  {\n    type: SET_IS_SOURCE_LOADED,\n    isSourceLoaded\n  }\n)\n\nexport const setIsMapLoaded = (isMapLoaded) => (\n  {\n    type: SET_IS_MAP_LOADED,\n    isMapLoaded\n  }\n)\n\nexport const setIsLabelsToggled = (isLabelsToggled) => (\n  {\n    type: SET_IS_LABELS_TOGGLED,\n    isLabelsToggled\n  }\n)\n\nexport const setIsDarkModeToggled = (isDarkModeToggled) => (\n  {\n    type: SET_IS_DARK_MODE_TOGGLED,\n    isDarkModeToggled\n  }\n)\n\nexport const setIsClusterToggled = (isClusterToggled) => (\n  {\n    type: SET_IS_CLUSTER_TOGGLED,\n    isClusterToggled\n  }\n)\n\nexport const setIsSearchOnMapMoveToggled = (isSearchOnMapMoveToggled) => (\n  {\n    type: SET_IS_SEARCH_ON_MAP_MOVE_TOGGLED,\n    isSearchOnMapMoveToggled\n  }\n)\n\nexport const setMapStyle = (mapStyle) => (\n  {\n    type: SET_MAP_STYLE,\n    mapStyle\n  }\n)\n\nexport const toggleResultsDrawer = (toggle) => (\n  {\n    type: TOGGLE_RESULTS_DRAWER,\n    isResultsDrawerToggled: toggle\n  }\n)\n\nexport const toggleSettingsDrawer = (toggle) => (\n  {\n    type: TOGGLE_SETTINGS_DRAWER,\n    isSettingsDrawerToggled: toggle\n  }\n)\n\nexport const setHoveredFeatureData = (data) => (\n  {\n    type: SET_HOVERED_FEATURE_DATA,\n    hoveredFeatureData: data\n  }\n)\n\nexport const addHoveredFeatureHash = (data) => (\n  {\n    type: ADD_HOVERED_FEATURE_HASH,\n    hoveredFeatureHashMap: data\n  }\n)\n\nexport const moveMapToPosition = (moveMapToPosition) => (\n  {\n    type: MOVE_MAP_TO_POSITION,\n    moveMapToPosition\n  }\n)\n\nexport const toggleIsPopupLoading = (isPopupLoading) => (\n  {\n    type: TOGGLE_IS_POPUP_LOADING,\n    isPopupLoading\n  }\n)\n\nexport const setCurrentPopupTitle = (currentPopupTitle) => (\n  {\n    type: SET_CURRENT_POPUP_TITLE,\n    currentPopupTitle\n  }\n)\n\nexport const resizeMap = (toggle) => (\n  {\n    type: RESIZE_MAP,\n    resizeMap: toggle\n  }\n)\n\nexport const setUrl = (url) => (\n  {\n    type: SET_URL,\n    url\n  }\n)\n\nexport const forceGetDisplayedFeatures = (toggle) => (\n  {\n    type: FORCE_GET_DISPLAYED_FEATURES,\n    forceGetDisplayedFeatures: toggle\n  }\n)\n\nexport const jumpToMapPosition = (jumpToMapPosition) => (\n  {\n    type: JUMP_TO_MAP_POSITION,\n    jumpToMapPosition\n  }\n)\n\nexport const updateLocationSearchQuery = (locationSearchQuery) => (\n  {\n    type: UPDATE_LOCATION_SEARCH_QUERY,\n    locationSearchQuery\n  }\n)\n\nexport const setSearchMode = (searchMode) => (\n  {\n    type: SEARCH_MODE,\n    searchMode\n  }\n)\n\nexport const setValidatedLocation = (validatedLocation) => (\n  {\n    type: SET_VALIDATED_LOCATION,\n    validatedLocation\n  }\n)\n\nexport const showFilters = (showFilters) => (\n  {\n    type: SHOW_FILTERS,\n    showFilters\n  }\n)\n\nexport const setFilterCount = (filterCount) => (\n  {\n    type: SET_FILTER_COUNT,\n    filterCount\n  }\n)\n\nexport const updateKeywordSearchQuery = (keywordSearchQuery) => (\n  {\n    type: UPDATE_KEYWORD_SEARCH_QUERY,\n    keywordSearchQuery\n  }\n)\n\nexport const zoomFitMarkers = (zoomFitMarkers) => (\n  {\n    type: ZOOM_FIT_MARKERS,\n    zoomFitMarkers\n  }\n)\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { \n  setHoveredFeature,\n  toggleResultsDrawer\n} from '../../store/actions';\n\n\nconst Card = ({\n    vessel_name,\n    year_sunk,\n    location_latitude,\n    location_longitude,\n    id,\n    history_summary,\n    hoverId,\n    jumpTo,\n    popUp\n  }) => {\n\n  let windowWidth = useSelector(state => state.windowWidth);\n  const dispatch = useDispatch();\n\n  function handleMouseOver() {\n    dispatch(setHoveredFeature(hoverId))\n  }\n\n  \n  function handleOnClick() {\n    jumpTo(location_longitude, location_latitude);\n    popUp(location_longitude, location_latitude, id);\n\n    if (windowWidth <= 500) {\n      dispatch(toggleResultsDrawer(false));\n    }\n  }\n\n  return (\n    <li className=\"card margin-top-bottom\"\n      onClick={ () => handleOnClick() }\n      onMouseOver={ () => handleMouseOver() }>\n\n      <div className=\"card-header\">\n        <h1>{ vessel_name } { year_sunk && year_sunk !== 'null' && ` (${year_sunk})` }</h1>\n        { location_latitude && location_longitude && \n          <h2>{ location_latitude }, { location_longitude }</h2>\n        }\n      </div>\n\n      <div className=\"card-content\">\n        { history_summary !== 'null' &&\n          <p>{ history_summary && history_summary.slice(0, 150) }</p>\n        }\n      </div>\n    </li>\n  )\n}\n\n\nexport default Card;\n","import store from '../store/store'\nimport axios from 'axios'\n\nimport { \n    isLoading,\n    updateMarkers,\n    setIsSearchOnMapMoveToggled,\n    setUrl,\n    setValidatedLocation\n  } from '../store/actions'\n\n\nexport const getRecordById = (id) => {\n  return new Promise(resolve => {\n    axios.get(`/api/id/${id}`).then(res => {\n      if (res.status >= 200 && res.status < 500) {\n        resolve(res)\n      } else {\n       resolve(); \n      }\n    })\n  })\n}\n\n\nexport const searchWithinBoundingBox = (bounds) => {\n  store.dispatch(isLoading(true))\n  const _ne = bounds._ne \n  const _sw = bounds._sw \n  axios.get(`/api/geobox/${_ne.lng}/${_ne.lat}/${_sw.lng}/${_sw.lat}`)\n    .then(res => {\n      if (res.status >= 200 && res.status < 500) {\n        let arr = (res.data.hits.hits.map(elem => elem._source))\n        let markers = createMarkers(arr);\n\n        store.dispatch(updateMarkers(markers));\n        store.dispatch(isLoading(false))\n      } else {\n        store.dispatch(isLoading(false))\n      }\n    })\n    .catch(err => {\n    })\n}\n\n\nexport const searchNear = (geoname) => {\n  if (geoname.length > 0) {\n    store.dispatch(isLoading(true))\n    axios.get(`/api/near/${geoname}`)\n      .then(res => {\n        if (res.status >= 200 && res.status < 500) {\n          let arr = (res.data.hits.map(elem => elem._source))\n          let markers = createMarkers(arr);\n          store.dispatch(updateMarkers(markers))\n          store.dispatch(isLoading(false))\n          store.dispatch(setIsSearchOnMapMoveToggled(false))\n          store.dispatch(setValidatedLocation(res.data.name))\n          store.dispatch(setUrl())\n        } else {\n          store.dispatch(isLoading(false))\n          store.dispatch(setValidatedLocation(''))\n        }\n      })\n      .catch(err => {\n        store.dispatch(isLoading(false))\n        store.dispatch(setValidatedLocation(''))\n      })\n  }\n}\n\n\nexport const fetchWrecksFromDb = (payload) => {\n  return new Promise((resolve, reject) => {\n    store.dispatch(isLoading(true))\n    let { query, limit } = payload\n    \n    axios.get(`/api/meta/${query}/${limit}`)\n    .then(res => {\n      if (res.status >= 200 && res.status < 500) {\n        let arr = (res.data.hits.hits.map(elem => elem._source))\n        let markers = createMarkers(arr);\n        store.dispatch(updateMarkers(markers))\n        store.dispatch(isLoading(false))\n        resolve('ok')\n      } else {\n        store.dispatch(isLoading(false))\n        resolve()\n      }\n    })\n    .catch(err => {\n      store.dispatch(isLoading(false))\n      resolve()\n    })\n  })\n}\n\n\n// {\n//   history_summary: \"The 7 ton 27 foot wooden gas screw fishing vessel A M burned November 14, 1962 at the mouth of the Kasilof River in Cook Inlet.\"\n//   id: \"5da7952ca33afb21154bd82f\"\n//   location_latitude: 60.3875\n//   location_longitude: -151.29583333333332\n//   vessel_name: \"A M\"\n//   year_sunk: \"1962\"\n// }\n\nconst createMarkers = (data) => { \n  let markers = data.map(elem => {\n    return (\n      {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"Point\",\n          \"coordinates\": [elem.location_longitude, elem.location_latitude]\n        },\n        \"properties\": { ...elem },\n        \"id\": Math.floor(Math.random() * 99999999)\n      }\n    )\n  })\n  \n  return markers;\n}\n\n\n// decimal places  decimal degrees N/S or E/W at equator\n// 2   0.01    1.1132 km\n// 3   0.001   111.32 m\n// 4   0.0001  11.132 m\n// 5   0.00001 1.1132 m","import React from 'react';\nimport Card from './Card';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n  toggleResultsDrawer, \n  updateKeywordSearchQuery,\n  setIsSearchOnMapMoveToggled,\n  zoomFitMarkers } from '../../store/actions';\nimport { fetchWrecksFromDb } from '../../utils/api';\n\nconst Sidebar = ({jumpTo, popUp}) => {\n  const isOpen = useSelector(state => state.isResultsDrawerToggled);\n  const markers = useSelector(state => state.markers);\n  const query = useSelector(state => state.keywordSearchQuery);\n  const dispatch = useDispatch();\n\n  console.log('isOpen', isOpen)\n\n  let cards = [];\n\n  cards = markers.data.features.slice(0, 50).map((elem, index) => {\n    return (\n      <Card \n        key={ 'card' + index }\n        hoverId={ elem.id }\n        { ...elem.properties }\n        jumpTo={jumpTo}\n        popUp={popUp}\n      />\n    )\n  })\n  \n  function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  }\n\n\n  async function handleSearch() {\n    if (query) {\n      dispatch(setIsSearchOnMapMoveToggled(false));\n\n      let res = await fetchWrecksFromDb({\n        query,\n        db: 'elastic',\n        limit: 10000\n      })\n\n      if (res) {\n        dispatch(zoomFitMarkers(true));\n      }\n    }\n  }\n\n\n\n  return (\n    <div \n      className={`drawer ${isOpen ? 'results-drawer-open' : ''} `}\n      // style={{ transform: isOpen ? 'translateY(10%)' :'translateX(0) translateY(95%)'}}\n      >\n      <div className=\"drawer-tab\"\n       onClick={ () => dispatch(toggleResultsDrawer(!isOpen)) }>\n         \n        <div className=\"arrow-icon\" alt=\"collapse drawer\">\n          { isOpen ? '\\u25C0' : '\\u25B6' }\n        </div>\n\n        <div className=\"mobile-close\">\n          { isOpen ? 'Close' : 'Results List' }\n        </div>\n      </div>\n\n      <div className='drawer-contents'>\n        <div className=\"results-container\">\n          <h3>{ markers.data.features.length } results. </h3>\n\n          <div className=\"filters-container\">\n            <div className='input-container'>\n              <input className='input-field'\n                autoFocus\n                placeholder=\"submarine, schooner, etc.\"\n                value={ query }\n                onKeyDown={handleKeyDown}\n                onChange={ (e) => dispatch(updateKeywordSearchQuery(e.target.value)) } />\n            </div>\n\n            <div className='button update-button'\n              onClick={ () => handleSearch() }>\n                Keyword Search\n            </div>\n          </div>\n\n          <ul className=\"card-container\">\n            { cards }\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Sidebar;\n","import React from 'react'\n\nconst ButtonFindAll = ({handleClick}) => { \n\n  return (\n    <div className='button button-find-in-view button-primary' \n      onClick={ () => handleClick() }>\n      \n      Find All in View\n    \n    </div>\n  )\n}\n\nexport default ButtonFindAll;\n","import React from 'react'\nimport { useSelector } from 'react-redux';\n\nconst ButtonSwapBasemap = ({toggleMapStyle, isResultsDrawerToggled}) =>  {\n  let windowWidth = useSelector(state => state.windowWidth);\n\n  return (\n      <div \n        className={`button button-swap margin-top-bottom ${isResultsDrawerToggled ? 'drawer-open' : ''}`}\n        onClick={  () => toggleMapStyle() } >\n        { windowWidth <= 500 ? 'Depth' : 'Toggle Depth'}\n      </div>\n  )\n}\n\nexport default ButtonSwapBasemap;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { setIsSearchOnMapMoveToggled } from '../store/actions'\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.isLoading, \n    isSearchOnMapMoveToggled: state.isSearchOnMapMoveToggled\n  }\n}\n\nclass CheckboxSearchOnMove extends React.Component {\n  render() {\n\n    return (\n      <div className=\"checkbox-search-on-move\">\n        <div className=\"mdc-checkbox mdc-checkbox--upgraded mdc-ripple-upgraded mdc-ripple-upgraded--unbounded\">\n          <input type=\"checkbox\" \n            className=\"mdc-checkbox__native-control\" \n            id=\"checkbox-search-on-move\" \n            aria-checked=\"true\" \n            checked={ this.props.isSearchOnMapMoveToggled } \n            onChange={ (e) => this.props.setIsSearchOnMapMoveToggled(e.target.checked) }\n            />\n          \n          <div className=\"mdc-checkbox__background\">\n            <svg className=\"mdc-checkbox__checkmark\" viewBox=\"0 0 24 24\" focusable=\"false\">\n              <path className=\"mdc-checkbox__checkmark-path\" fill=\"none\" d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path>\n            </svg>\n            <div className=\"mdc-checkbox__mixedmark\"></div>\n          </div>\n        </div>\n      \n        <label htmlFor=\"checkbox-search-on-move\">Search On Map Move</label>\n      \n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, { setIsSearchOnMapMoveToggled })(CheckboxSearchOnMove)\n","import React, {useState, useEffect} from 'react'\nimport { getRecordById } from '../utils/api';\n\n\nconst Popup = ({id}) => {\n  const [popupData, setPopupData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  let popupContent = null;\n\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      getRecordById(id).then(res => {  \n        if (res.data.results.length > 0) {\n          setPopupData(res.data.results[0]);\n        }\n        setLoading(false);\n      });\n    }\n  }, [id])\n  \n\n  if (popupData) {\n    popupContent = (\n      <div className=\"popup-card\">\n        <div className=\"popup-header\">\n          <div className=\"popup-card-title\">\n            <h1>{ popupData.vessel_name } {(popupData.year_sunk && popupData.year_sunk !== 'null') ? ' ('+popupData.year_sunk+')' : ''}</h1>\n          </div> \n        </div>\n\n        <div className=\"popup-content\">\n          { popupData.history && \n            <ul className=\"popup-history\">\n              { popupData.history.map((elem, index) => {\n                if (elem !== '\\u00a0') {\n                  return (<li key={'history-' + index}> {elem} </li>)\n                } else {\n                  return null\n                }\n                })\n              }\n            </ul>\n          }\n\n          {\n            popupData.location &&\n              <ul className=\"popup-location\">\n                <li key='location'> \n                  { popupData.location.lat }, {popupData.location.lon }\n                </li>\n              </ul>\n          }\n\n          { popupData.sources && popupData.sources_external_links &&\n            <ul className=\"popup-sources\">\n              { popupData.sources.map((elem, index) => \n                (\n                  <li key={'sources-' + index}> \n                    <a href={popupData.sources_external_links[index]}> {elem} </a>\n                  </li>\n                )\n              )}\n            </ul>\n          }\n\n        </div>\n\n      </div>\n    )\n  }\n\n    \n  return (\n    <div className=\"popup-container\">\n      { loading \n      ? \n        <p>\n          ...LOADING\n        </p>\n      : \n        <div>\n          { popupContent }\n        </div>\n      }\n    </div>\n  )\n}\n\n\nexport default Popup;\n ","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport mapboxgl, { LngLatBounds } from 'mapbox-gl';\nimport Sidebar from './Sidebar/Sidebar';\nimport ButtonFindAll from './ButtonFindAll';\nimport ButtonSwapBasemap from './ButtonSwapBasemap';\nimport CheckboxSearchOnMove from './CheckboxSearchOnMove'\nimport Popup from './Popup';\nimport { searchWithinBoundingBox } from '../utils/api';\nimport { \n  zoomFitMarkers,\n  updateSearchQuery,\n  setMapStyle\n} from '../store/actions'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\n\nconst Map = () => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const hoveredIdRef = useRef(null);\n  const popupRef = useRef(null);\n  const dispatch = useDispatch();\n\n  let markers = useSelector(state => state.markers);\n  let hoveredFeature = useSelector(state => state.hoveredFeature);\n  let isSearchOnMapMoveToggled = useSelector(state => state.isSearchOnMapMoveToggled);\n  let isResultsDrawerToggled = useSelector(state => state.isResultsDrawerToggled);\n  let zoomFit = useSelector(state => state.zoomFitMarkers);\n  let mapStyle = useSelector(state => state.mapStyle);\n  let windowWidth = useSelector(state => state.windowWidth);\n\n\n  console.log('windowWidth', windowWidth)\n\n  const handleMarkerClick = (e) => {\n    let features = e.target.queryRenderedFeatures(e.point, { layers: ['markers'] })\n          \n    if (features && features.length > 0) {\n\n      let { properties = { }} = features[0]\n      let { location_latitude, location_longitude } = properties\n    \n      map.current.jumpTo({\n        center: [location_longitude, location_latitude],\n      })\n\n      const placeholder = document.createElement('div');\n      placeholder.style.minWidth = \"400px\";\n      placeholder.style.minHeight = \"400px\";\n\n      ReactDOM.render((\n        <Popup {...properties } />), placeholder\n      );\n\n      popupRef.current = new mapboxgl.Popup({offset: 20})\n        .setLngLat({lng: location_longitude, lat: location_latitude})\n        .setDOMContent(placeholder)\n        .on('open', () => {\n          e.target._update();\n        })\n        .addTo(e.target);\n    } \n  }\n\n\n  useEffect(() => {\n    map.current = new mapboxgl.Map({\n      accessToken: 'pk.eyJ1IjoiZ3dpbGtlbiIsImEiOiJjanI1ajR6Z2QwMWk1NDRubXYyYmV6OHVkIn0.D68kEgoBzr8IZn8zz40MOQ',\n      attributionControl: false,\n      logoPosition: 'top-right', \n      container: mapContainer.current,\n      // style: mapStyles[0],\n      style: 'mapbox://styles/mapbox/light-v9',\n      // alaska\n      center: (windowWidth <= 500) ? {lng: -122.4553226852846, lat: 37.99972502121675} :  {lng: -152.4469810886438, lat: 58.58999571845493},\n      zoom: (windowWidth <= 500) ? 9.5 : 5\n    });\n\n    map.current.on('load', () => {\n      map.current.resize();\n\n      map.current.addSource('geojson-markers', markers);\n\n      map.current.addSource('oceans-base', {\n        'type': 'raster',\n        'tiles': [\n          'https://services.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}'\n        ],\n        'tileSize': 256,\n      })\n\n      map.current.addSource('oceans-labels', {\n        'type': 'raster',\n        'tiles': [\n          'https://services.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Reference/MapServer/tile/{z}/{y}/{x}'\n        ],\n        'tileSize': 256,\n      })\n\n      map.current.addLayer(\n        {\n        'id': 'oceans-base-layer',\n        'type': 'raster',\n        'source': 'oceans-base',\n        'minzoom': 0,\n        'maxzoom': 22\n        });\n\n      // map.current.addLayer(\n      //   {\n      //   'id': 'oceans-labels-layer',\n      //   'type': 'raster',\n      //   'source': 'oceans-labels',\n      //   'minzoom': 0,\n      //   'maxzoom': 22\n      //   });\n\n\n      map.current.addLayer({\n        id: 'markers',\n        source: 'geojson-markers',\n        type: 'circle',\n        filter: ['!', ['has', 'point_count']],\n        paint: {\n          'circle-radius': [\n            'case', ['boolean', ['feature-state', 'hover'], false],\n            7,\n            5\n          ],\n          'circle-stroke-width': [\n            'case', ['boolean', ['feature-state', 'hover'], false],\n            3,\n            1\n          ],\n          'circle-stroke-color': [\n            'case', ['boolean', ['feature-state', 'hover'], false],\n            'rgba(251, 104, 57, 1)',\n            'rgba(50, 98, 234, 1)'\n          ],\n          'circle-color':[\n              'case', ['boolean', ['feature-state', 'hover'], false],\n              'rgba(251, 104, 57, .6)',\n              '#FF3535'\n            ]\n          }\n      });\n\n      map.current.addLayer({\n        id: \"clusters\",\n        type: \"circle\",\n        source: \"geojson-markers\",\n        filter: [\"has\", \"point_count\"], \n        paint: {\n          // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n          // with three steps to implement three types of circles:\n          //   * Blue, 20px circles when point count is less than 100\n          //   * Yellow, 30px circles when point count is between 100 and 750\n          //   * Pink, 40px circles when point count is greater than or equal to 750\n          \"circle-color\": [\n            \"step\",\n            [\"get\", \"point_count\"],\n            \"#FFDB33\",\n            10,\n            \"#FFBF3B\",\n            50,\n            \"#FA6B23\"\n            ],\n          \"circle-radius\": [\n            \"step\",\n            [\"get\", \"point_count\"],\n            20,\n              100,\n            30,\n              500,\n            40\n          ]\n        }\n      })\n\n      map.current.addLayer({\n        id: \"cluster-labels\",\n        type: \"symbol\",\n        source: \"geojson-markers\",\n        filter: [\"has\", \"point_count\"],\n        layout: {\n          \"text-field\": \"{point_count_abbreviated}\",\n          \"text-font\": [\"DIN Offc Pro Medium\", \"Arial Unicode MS Bold\"],\n          \"text-size\": 12\n          },\n        paint: {\n          \"text-color\": [\n            \"step\",\n            [\"get\", \"point_count\"],\n            'rgb(0,0,0)',\n            10,\n            'rgb(255,255,255)',\n            50,\n            'rgb(255,255,255)'\n          ],\n        }\n      })\n\n      map.current.addLayer({\n        id: \"marker-labels\",\n        type: \"symbol\",\n        source: \"geojson-markers\",\n        layout: { \n          \"text-size\": 18, \n          \"text-field\": \n            [\"case\",\n              [\"to-boolean\",[\"get\",\"year_sunk\"]],\n                [\"concat\",[\"get\",\"vessel_name\"],\" (\",[\"get\",\"year_sunk\"],\")\"],\n              [\"get\",\"vessel_name\"]\n            ],\n          \"text-anchor\": \"left\",\n          \"text-offset\": [.75, -1] },\n        paint: {\n            \"text-color\": \"rgba(0, 0, 0, 1)\",\n            \"text-halo-color\": \"rgb(255,255,255)\",\n            \"text-halo-width\":  [\n              'case', ['boolean', ['feature-state', 'hover'], false],\n              2,\n              1\n            ]\n          }\n      })\n\n      map.current.setLayoutProperty('oceans-base-layer', 'visibility', 'visible');\n\n      map.current.on('click', 'markers', handleMarkerClick);\n\n      map.current.on('mousemove', 'markers', (e) => {\n        if (e.features && e.features.length > 0) {\n          map.current.getCanvas().style.cursor = 'pointer'\n\n          if (hoveredIdRef.current) {\n            map.current.setFeatureState(\n              { source: 'geojson-markers', id: hoveredIdRef.current },\n              { hover: false }\n            );\n          }\n\n          hoveredIdRef.current = e.features[0].id\n\n          if (e.features.length && e.features[0].id) {\n            map.current.setFeatureState(\n              { source: 'geojson-markers', id: e.features[0].id },\n              { hover: true }\n            );\n          }\n        } \n      })\n\n      map.current.on('mouseleave', 'markers', (e) => {\n        map.current.getCanvas().style.cursor = 'grab'\n\n        if (hoveredIdRef.current) {\n          map.current.setFeatureState(\n            { source: 'geojson-markers', id: hoveredIdRef.current },\n            { hover: false }\n          );\n        }\n      })\n\n      map.current.on('click', 'clusters', (e) => {\n        let features = e.target.queryRenderedFeatures(e.point, { layers: ['clusters'] });\n\n        if (!features.length) {\n          return\n        }\n\n        let clusterId = features[0].properties.cluster_id;\n\n        map.current.getSource('geojson-markers').getClusterExpansionZoom(clusterId, (err, zoom) => {\n        if (err)\n          return;\n          map.current.jumpTo({\n            center: features[0].geometry.coordinates,\n            zoom: zoom\n          });\n        });\n      })\n    \n      map.current.on('move', () => {\n        console.log(map.current.getCenter(), map.current.getZoom())\n      })\n\n      // map.current.on('style.load', handleStyleChange);\n    })\n\n    return () => map.current.remove();\n    // eslint-disable-next-line\n  }, [])\n\n\n  useEffect(() => {\n    if (map) {\n      let layer = map.current.getLayer('markers');\n\n      if (layer) {\n        let features = map.current.queryRenderedFeatures({\n          layers: ['markers']\n        })\n\n        features.forEach(feature => {\n          map.current.setFeatureState(\n            { source: 'geojson-markers', id: feature.id },\n            { hover: false }\n          );\n        })\n  \n        map.current.setFeatureState(\n          { source: 'geojson-markers', id: hoveredFeature },\n          { hover: true }\n        );\n      }\n    }\n  }, [map, hoveredFeature])\n\n\n  useEffect(() => {\n    if (!map) { \n      return \n    }\n\n    const cb = () => {\n      let {_ne, _sw} = map.current.getBounds()\n      if (isSearchOnMapMoveToggled) {\n        searchWithinBoundingBox( {_ne: _ne.wrap(), _sw: _sw.wrap()})\n      }\n    }\n\n    map.current.on('moveend', cb)\n\n    return () => {\n      map.current.off('moveend', cb)\n    }\n  }, [map, isSearchOnMapMoveToggled]);\n\n\n  useEffect(() => {\n    if (map) {\n      if (map.current.getSource('geojson-markers') && map.current.isSourceLoaded('geojson-markers')) {\n        map.current.getSource('geojson-markers').setData(markers.data);\n      }\n    }\n  // eslint-disable-next-line \n  }, [markers])\n\n  \n  useEffect(() => {\n    function move() {\n      if (map && markers.data.features.length > 0) {  \n        let newLngLatBounds = new LngLatBounds().extend([markers.data.features[0].properties.location_longitude, markers.data.features[0].properties.location_latitude]);\n        let coordinates = markers.data.features.map(elem => {\n          if (elem.properties.location_longitude && elem.properties.location_latitude) {\n            return newLngLatBounds.extend([elem.properties.location_longitude, elem.properties.location_latitude]);\n          } else {\n            return null;\n          }\n        })\n        let newBounds = new LngLatBounds();\n        let bounds = coordinates.reduce((bounds, coord) => {\n          return newBounds.extend(coord);\n        })\n        map.current.fitBounds(bounds, {\n          padding: 250\n        })\n      }\n    }\n\n    if (zoomFit) {\n      move();\n      dispatch(zoomFitMarkers(false));\n    }\n    // eslint-disable-next-line \n  }, [zoomFit])\n  \n\n  useEffect(() => {\n    if (windowWidth <= 500) {\n      map.current.setPadding({ left: 0, top: 0, bottom: 450 });\n    } else {\n      if (isResultsDrawerToggled) {\n        map.current.setPadding({ left: 300, top: 50 });\n      } else {\n        map.current.setPadding({ left: 0, top: 0 });\n      }\n    }\n    \n  }, [isResultsDrawerToggled, windowWidth])\n\n\n  function jumpTo(lon, lat) {\n    map.current.jumpTo({\n      center: [lon, lat],\n      zoom: 9\n    })\n  }\n\n\n  function popUp(lng, lat, id) {\n    if (map) {\n     if (popupRef.current) {\n      popupRef.current.remove();\n     }\n\n     const placeholder = document.createElement('div');\n     placeholder.style.minWidth = \"400px\";\n     placeholder.style.minHeight = \"400px\";\n\n      ReactDOM.render((\n          <Popup id={id} />), placeholder\n        );\n\n      popupRef.current = new mapboxgl.Popup({ offset: 20 })\n        .setLngLat({lng, lat})\n        .setDOMContent(placeholder)\n        .on('open', () => {\n          map.current._update();\n        })\n        .addTo(map.current);\n    }\n  }\n\n\n  function findInView() {\n    searchWithinBoundingBox(map.current.getBounds());\n    dispatch(updateSearchQuery(''));\n  }\n\n\n  function toggleMapStyle() {\n    if (map) {\n      if (mapStyle === 'depth') {\n        map.current.setLayoutProperty('oceans-base-layer', 'visibility', 'none');\n        map.current.resize();\n        dispatch(setMapStyle('no-depth'));\n      } else {\n        map.current.setLayoutProperty('oceans-base-layer', 'visibility', 'visible');\n        map.current.resize();\n        dispatch(setMapStyle('depth'));\n      }\n    }\n  }\n\n\n  return (\n    <div className=\"fullscreen-container\">\n      <Sidebar \n        jumpTo={jumpTo} \n        popUp={popUp} />\n\n      <CheckboxSearchOnMove />\n\n      <div className=\"map-container\" >\n        <div className=\"map\" ref={el => (mapContainer.current = el)}></div>\n        \n        <ButtonSwapBasemap toggleMapStyle={toggleMapStyle} isResultsDrawerToggled={isResultsDrawerToggled} />\n\n        { !isSearchOnMapMoveToggled &&\n          <ButtonFindAll handleClick={findInView} />\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Map;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport Map from './components/Map'\n\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={ store }>\n      <Map />\n  </Provider>, document.getElementById('root')\n);\n\nconsole.log(`\n\n███████╗██╗  ██╗██╗██████╗ ██╗    ██╗██████╗ ███████╗ ██████╗██╗  ██╗\n██╔════╝██║  ██║██║██╔══██╗██║    ██║██╔══██╗██╔════╝██╔════╝██║ ██╔╝\n███████╗███████║██║██████╔╝██║ █╗ ██║██████╔╝█████╗  ██║     █████╔╝ \n╚════██║██╔══██║██║██╔═══╝ ██║███╗██║██╔══██╗██╔══╝  ██║     ██╔═██╗ \n███████║██║  ██║██║██║     ╚███╔███╔╝██║  ██║███████╗╚██████╗██║  ██╗\n╚══════╝╚═╝  ╚═╝╚═╝╚═╝      ╚══╝╚══╝ ╚═╝  ╚═╝╚══════╝ ╚═════╝╚═╝  ╚═╝\n                                                                     \n███████╗██╗  ██╗██████╗ ██╗      ██████╗ ██████╗ ███████╗██████╗     \n██╔════╝╚██╗██╔╝██╔══██╗██║     ██╔═══██╗██╔══██╗██╔════╝██╔══██╗    \n█████╗   ╚███╔╝ ██████╔╝██║     ██║   ██║██████╔╝█████╗  ██████╔╝    \n██╔══╝   ██╔██╗ ██╔═══╝ ██║     ██║   ██║██╔══██╗██╔══╝  ██╔══██╗    \n███████╗██╔╝ ██╗██║     ███████╗╚██████╔╝██║  ██║███████╗██║  ██║    \n╚══════╝╚═╝  ╚═╝╚═╝     ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝    \n                                                                     \nhttps://www.gwilken.com/shipwrecks\n`)\n"],"sourceRoot":""}